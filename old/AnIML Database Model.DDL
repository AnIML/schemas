--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : G:\AnIML\AnIML Database Model.vsd.
--    Time Created: December 13, 2004 7:45 PM.
--    Operation   : From Visio Generate Wizard.
--    Connected data source : MS Access Database
--    Connected server      : ACCESS
--    Connected database    : G:\AnIML\AnIML.mdb



-- Create new table `Presentation`.
-- `Presentation` : Table of Presentation
-- 	`ID` : ID identifies Presentation
-- 	`IsVisible` : IsVisible is of Presentation
-- 	`Scale` : Scale is of Presentation  
create table `Presentation` ( 
	`ID` LONG,
	`IsVisible` SHORT,
	`Scale` LONGTEXT, constraint `Presentation_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Presentation`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Presentation' :
-- 	`ID`


-- Create new table `Project`.
-- `Project` : Table of Project
-- 	`ID` : ID identifies Project
-- 	`Name` : Name is of Project
-- 	`any` : any is of Project  
create table `Project` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`any` LONGTEXT, constraint `Project_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Project`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Project' :
-- 	`ID`


-- Create new table `Devices`.
-- `Devices` : Table of Devices
-- 	`ID` : ID identifies Devices
-- 	`Model` : Model is of Devices
-- 	`SerialNumber` : SerialNumber is of Devices
-- 	`any` : any is of Devices  
create table `Devices` ( 
	`ID` LONG,
	`Model` LONGTEXT,
	`SerialNumber` LONGTEXT,
	`any` LONGTEXT, constraint `Devices_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Devices`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Devices' :
-- 	`ID`


-- Create new table `Vector`.
-- `Vector` : Table of Vector
-- 	`ID` : ID identifies Vector
-- 	`IsDependent` : IsDependent is of Vector
-- 	`IsVisible` : IsVisible is of Vector
-- 	`Scale` : Scale is of Vector
-- 	`Length` : Length is of Vector
-- 	`ValueTypeID` : ValueTypeID is of Vector
-- 	`PageID` : PageID is of Vector
-- 	`any` : any is of Vector  
create table `Vector` ( 
	`ID` LONG,
	`IsDependent` SHORT,
	`IsVisible` SHORT,
	`Scale` LONGTEXT,
	`Length` LONGTEXT,
	`ValueTypeID` LONG,
	`PageID` LONG,
	`any` LONGTEXT, constraint `Vector_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Vector`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Vector' :
-- 	`ID`


-- Create new table `ValueType`.
-- `ValueType` : Table of ValueType
-- 	`ID` : ID identifies ValueType
-- 	`Name` : Name is of ValueType
-- 	`any` : any is of ValueType  
create table `ValueType` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`any` LONGTEXT, constraint `ValueType_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ValueType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ValueType' :
-- 	`ID`
-- 	`Name`


-- Create new table `Selection`.
-- `Selection` : Table of Selection
-- 	`ID` : ID identifies Selection
-- 	`SelectionType` : SelectionType is of Selection
-- 	`Start` : Start is of Selection
-- 	`Stop` : Stop is of Selection
-- 	`PointIndex` : PointIndex is of Selection
-- 	`VectorID` : VectorID is of Selection
-- 	`PageID` : PageID is of Selection
-- 	`any` : any is of Selection  
create table `Selection` ( 
	`ID` LONG,
	`SelectionType` LONGTEXT,
	`Start` SHORT,
	`Stop` SHORT,
	`PointIndex` SHORT,
	`VectorID` LONG,
	`PageID` LONG,
	`any` LONGTEXT, constraint `Selection_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Selection`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Selection' :
-- 	`ID`


-- Create new table `Technique`.
-- `Technique` : Table of Technique
-- 	`ID` : ID identifies Technique
-- 	`TechniqueName` : TechniqueName is of Technique
-- 	`URI` : URI is of Technique
-- 	`any` : any is of Technique  
create table `Technique` ( 
	`ID` LONG,
	`TechniqueName` LONGTEXT,
	`URI` LONGTEXT,
	`any` LONGTEXT, constraint `Technique_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Technique`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Technique' :
-- 	`ID`
-- 	`TechniqueName`
-- 	`URI`


-- Create new table `SampleRole`.
-- `SampleRole` : Table of SampleRole
-- 	`ID` : ID identifies SampleRole
-- 	`RoleName` : RoleName partly identifies SampleRole
-- 	`any` : any is of SampleRole  
create table `SampleRole` ( 
	`ID` LONG,
	`RoleName` LONGTEXT,
	`any` LONGTEXT, constraint `SampleRole_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleRole`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleRole' :
-- 	`ID`
-- 	`RoleName`


-- Create new table `SampleExperiment`.
-- `SampleExperiment` : Table of SampleExperiment
-- 	`SampleExperimentID` : SampleExperimentID identifies SampleExperiment
-- 	`SampleID` : SampleID is of SampleExperiment
-- 	`ExperimentID` : ExperimentID is of SampleExperiment
-- 	`any` : any is of SampleExperiment  
create table `SampleExperiment` ( 
	`SampleExperimentID` LONG,
	`SampleID` LONG,
	`ExperimentID` LONG,
	`any` LONGTEXT, constraint `SampleExperiment_PK` primary key (`SampleExperimentID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleExperiment`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleExperiment' :
-- 	`SampleExperimentID`


-- Create new table `Signature`.
-- `Signature` : Table of Signature
-- 	`ID` : ID identifies Signature
-- 	`SignedInfo` : SignedInfo is of Signature
-- 	`ValueID` : ValueID is of Signature
-- 	`KeyInfo` : KeyInfo is of Signature
-- 	`Object` : Object is of Signature
-- 	`any` : any is of Signature  
create table `Signature` ( 
	`ID` LONG,
	`SignedInfo` LONGTEXT,
	`ValueID` LONG,
	`KeyInfo` SHORT,
	`Object` SHORT,
	`any` LONGTEXT, constraint `Signature_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Signature`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Signature' :
-- 	`ID`


-- Create new table `User`.
-- `User` : Table of User
-- 	`ID` : ID identifies User
-- 	`Name` : Name is of User
-- 	`Email` : Email is of User
-- 	`Phone` : Phone is of User
-- 	`Location` : Location is of User
-- 	`any` : any is of User  
create table `User` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`Email` LONGTEXT,
	`Phone` LONGTEXT,
	`Location` LONGTEXT,
	`any` LONGTEXT, constraint `User_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`User`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'User' :
-- 	`ID`
-- 	`Name`


-- Create new table `Audit`.
-- `Audit` : Table of Audit
-- 	`ID` : ID identifies Audit
-- 	`Timestamp` : Timestamp is of Audit
-- 	`UserID` : UserID is of Audit
-- 	`Action` : Action is of Audit
-- 	`Reason` : Reason is of Audit
-- 	`Description` : Description is of Audit
-- 	`SignableItemID` : SignableItemID is of Audit
-- 	`any` : any is of Audit  
create table `Audit` ( 
	`ID` LONG,
	`Timestamp` DATETIME,
	`UserID` LONG,
	`Action` SHORT,
	`Reason` SHORT,
	`Description` SHORT,
	`SignableItemID` LONG,
	`any` LONGTEXT, constraint `Audit_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Audit`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Audit' :
-- 	`ID`
-- 	`Timestamp`


-- Create new table `SampleType`.
-- `SampleType` : Table of SampleType
-- 	`ID` : ID identifies SampleType
-- 	`Name` : Name is of SampleType
-- 	`any` : any is of SampleType  
create table `SampleType` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`any` LONGTEXT, constraint `SampleType_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleType' :
-- 	`ID`
-- 	`Name`


-- Create new table `Sample`.
-- `Sample` : Table of Sample
-- 	`ID` : ID identifies Sample
-- 	`ExternalSampleID` : ExternalSampleID is of Sample
-- 	`SampleName` : SampleName is of Sample
-- 	`SampleTypeID` : SampleTypeID is of Sample
-- 	`SignableItemID` : SignableItemID is of Sample
-- 	`IsDerived` : IsDerived is of Sample
-- 	`SampleRoleID` : SampleRoleID is of Sample
-- 	`Purpose` : Purpose is of Sample
-- 	`any` : any is of Sample  
create table `Sample` ( 
	`ID` LONG,
	`ExternalSampleID` LONGTEXT,
	`SampleName` LONGTEXT,
	`SampleTypeID` LONG,
	`SignableItemID` LONG,
	`IsDerived` SHORT,
	`SampleRoleID` LONG,
	`Purpose` SHORT,
	`any` LONGTEXT, constraint `Sample_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Sample`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Sample' :
-- 	`ID`
-- 	`SampleTypeID`


-- Create new table `ParameterCategory`.
-- `ParameterCategory` : Table of ParameterCategory
-- 	`ID` : ID identifies ParameterCategory
-- 	`Name` : Name is of ParameterCategory
-- 	`SignableItemID` : SignableItemID is of ParameterCategory
-- 	`Type` : Type is of ParameterCategory
-- 	`any` : any is of ParameterCategory  
create table `ParameterCategory` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`SignableItemID` LONG,
	`Type` SHORT,
	`any` LONGTEXT, constraint `ParameterCategory_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ParameterCategory`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ParameterCategory' :
-- 	`ID`


-- Create new table `Parameter`.
-- `Parameter` : Table of Parameter
-- 	`ID` : ID identifies Parameter
-- 	`Name` : Name is of Parameter
-- 	`Value` : Value is of Parameter
-- 	`CategoryID` : CategoryID is of Parameter
-- 	`TypeID` : TypeID is of Parameter
-- 	`SignableItemID` : SignableItemID is of Parameter
-- 	`ExperimentID` : ExperimentID is of Parameter
-- 	`PageID` : PageID is of Parameter
-- 	`SampleID` : SampleID is of Parameter
-- 	`DeviceID` : DeviceID is of Parameter
-- 	`ProjectID` : ProjectID is of Parameter
-- 	`any` : any is of Parameter  
create table `Parameter` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`Value` LONGTEXT,
	`CategoryID` LONG,
	`TypeID` LONG,
	`SignableItemID` LONG,
	`ExperimentID` LONG,
	`PageID` LONG,
	`SampleID` LONG,
	`DeviceID` LONG,
	`ProjectID` LONG,
	`any` LONGTEXT, constraint `Parameter_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Parameter`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Parameter' :
-- 	`ID`


-- Create new table `IndividualValue`.
-- `IndividualValue` : Table of IndividualValue
-- 	`ID` : ID identifies IndividualValue
-- 	`Value` : Value is of IndividualValue
-- 	`VectorID` : VectorID is of IndividualValue
-- 	`any` : any is of IndividualValue  
create table `IndividualValue` ( 
	`ID` LONG,
	`Value` LONGTEXT,
	`VectorID` LONG,
	`any` LONGTEXT, constraint `IndividualValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`IndividualValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'IndividualValue' :
-- 	`ID`
-- 	`Value`
-- 	`VectorID`


-- Create new table `AutoIncrementedValue`.
-- `AutoIncrementedValue` : Table of AutoIncrementedValue
-- 	`ID` : ID identifies AutoIncrementedValue
-- 	`Increment` : Increment is of AutoIncrementedValue
-- 	`StartValue` : StartValue is of AutoIncrementedValue
-- 	`VectorID` : VectorID is of AutoIncrementedValue
-- 	`any` : any is of AutoIncrementedValue  
create table `AutoIncrementedValue` ( 
	`ID` LONG,
	`Increment` DOUBLE,
	`StartValue` DOUBLE,
	`VectorID` LONG,
	`any` LONGTEXT, constraint `AutoIncrementedValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`AutoIncrementedValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'AutoIncrementedValue' :
-- 	`ID`
-- 	`Increment`
-- 	`StartValue`
-- 	`VectorID`


-- Create new table `EncodedValue`.
-- `EncodedValue` : Table of EncodedValue
-- 	`ID` : ID identifies EncodedValue
-- 	`Value` : Value is of EncodedValue
-- 	`VectorID` : VectorID is of EncodedValue
-- 	`any` : any is of EncodedValue  
create table `EncodedValue` ( 
	`ID` LONG,
	`Value` LONGTEXT,
	`VectorID` LONG,
	`any` LONGTEXT, constraint `EncodedValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`EncodedValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'EncodedValue' :
-- 	`ID`
-- 	`Value`
-- 	`VectorID`


-- Create new table `ValueSetType`.
-- `ValueSetType` : Table of ValueSetType
-- 	`ValueSetTypeID` : ValueSetTypeID identifies ValueSetType
-- 	`ValueSetTypeName` : ValueSetTypeName is of ValueSetType
-- 	`any` : any is of ValueSetType  
create table `ValueSetType` ( 
	`ValueSetTypeID` LONG,
	`ValueSetTypeName` LONGTEXT,
	`any` LONGTEXT, constraint `ValueSetType_PK` primary key (`ValueSetTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ValueSetType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ValueSetType' :
-- 	`ValueSetTypeID`


-- Create new table `Page`.
-- `Page` : Table of Page
-- 	`ID` : ID identifies Page
-- 	`ValueSetTypeID` : ValueSetTypeID is of Page
-- 	`ExperimentID` : ExperimentID is of Page
-- 	`any` : any is of Page  
create table `Page` ( 
	`ID` LONG,
	`ValueSetTypeID` LONG,
	`ExperimentID` LONG,
	`any` LONGTEXT, constraint `Page_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Page`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Page' :
-- 	`ID`


-- Create new table `Experiment`.
-- `Experiment` : Table of Experiment
-- 	`ID` : ID identifies Experiment
-- 	`Name` : Name is of Experiment
-- 	`TechniqueID` : TechniqueID is of Experiment
-- 	`AuthorID` : AuthorID is of Experiment
-- 	`IsTemplate` : IsTemplate is of Experiment
-- 	`Timestamp` : Timestamp is of Experiment
-- 	`SampleID` : SampleID is of Experiment
-- 	`SignableItemID` : SignableItemID is of Experiment
-- 	`any` : any is of Experiment  
create table `Experiment` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`TechniqueID` LONG,
	`AuthorID` LONG,
	`IsTemplate` SHORT,
	`Timestamp` DATETIME,
	`SampleID` LONG,
	`SignableItemID` LONG,
	`any` LONGTEXT, constraint `Experiment_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Experiment`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Experiment' :
-- 	`ID`


-- Create new table `SampleContainer`.
-- `SampleContainer` : Table of SampleContainer
-- 	`ID` : Unique container identifier
-- 	`Barcode` : Barcode of container, should be unique in system.
-- 	`Container_Label` : Container_Label is of SampleContainer
-- 	`Created_Date` : Created_Date is of SampleContainer
-- 	`Row_Count` : Row_Count is of SampleContainer
-- 	`Column_Count` : Column_Count is of SampleContainer
-- 	`ProjectID` : ProjectID is of SampleContainer
-- 	`LocationID` : LocationID is of SampleContainer
-- 	`any` : any is of SampleContainer  
create table `SampleContainer` ( 
	`ID` LONG,
	`Barcode` LONGTEXT,
	`Container_Label` LONGTEXT,
	`Created_Date` DATETIME,
	`Row_Count` INTEGER,
	`Column_Count` INTEGER,
	`ProjectID` LONG,
	`LocationID` LONG,
	`any` LONGTEXT, constraint `Container_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleContainer`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleContainer' :
-- 	`ID`


-- Create new table `Carrier`.
-- `Carrier` : Table of Carrier
-- 	`Container_ID` : Container_ID identifies Carrier
-- 	`Carrier_Name` : Name of Carrier
-- 	`any` : any is of Carrier  
create table `Carrier` ( 
	`Container_ID` LONG,
	`Carrier_Name` LONGTEXT,
	`any` LONGTEXT, constraint `Carrier_PK` primary key (`Container_ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Carrier`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Carrier' :
-- 	`Container_ID`


-- Create new table `Carrier_Well`.
-- `Carrier_Well` : Table of Carrier_Well
-- 	`Container_ID` : Container_ID partly identifies Carrier_Well
-- 	`Carrier_Row` : Row of location within Carrier.
-- 	`Carrier_Column` : Column of location within Carrier.
-- 	`Carrier_Well_Seq_Pos` : Carrier_Well_Seq_Pos partly identifies Carrier_Well
-- 	`any` : any is of Carrier_Well  
create table `Carrier_Well` ( 
	`Container_ID` LONG,
	`Carrier_Row` LONG,
	`Carrier_Column` LONG,
	`Carrier_Well_Seq_Pos` LONG,
	`any` LONGTEXT, constraint `Carrier_Well_PK` primary key (`Carrier_Row`, `Carrier_Column`, `Container_ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Carrier_Well`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Carrier_Well' :
-- 	`Container_ID`
-- 	`Carrier_Row`
-- 	`Carrier_Column`
-- 	`Carrier_Well_Seq_Pos`


-- Create new table `Vial`.
-- `Vial` : Table of Vial
-- 	`Container_ID` : Container_ID identifies Vial
-- 	`Sample_ID` : Sample_ID partly identifies Vial
-- 	`any` : any is of Vial  
create table `Vial` ( 
	`Container_ID` LONG,
	`Sample_ID` LONG,
	`any` LONGTEXT, constraint `Vial_PK` primary key (`Container_ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Vial`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Vial' :
-- 	`Container_ID`
-- 	`Sample_ID`


-- Create new table `Plate`.
-- `Plate` : Table of Plate
-- 	`Container_ID` : Container_ID identifies Plate
-- 	`Plate_Name` : Name of Plate
-- 	`Access_Direction` : Access_Direction is of Plate
-- 	`any` : any is of Plate  
create table `Plate` ( 
	`Container_ID` LONG,
	`Plate_Name` LONGTEXT,
	`Access_Direction` LONGTEXT,
	`any` LONGTEXT, constraint `Plate_PK` primary key (`Container_ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Plate`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Plate' :
-- 	`Container_ID`


-- Create new table `Well`.
-- `Well` : Table of Well
-- 	`Container_ID` : Container_ID partly identifies Well
-- 	`Well_Seq_Pos` : Well_Seq_Pos partly identifies Well
-- 	`Sample_ID` : Sample_ID partly identifies Well
-- 	`Well_Row` : Well_Row is of Well
-- 	`Well_Column` : Well_Column is of Well
-- 	`Solvent` : Solvent is of Well
-- 	`Volume` : Volume is of Well
-- 	`any` : any is of Well  
create table `Well` ( 
	`Container_ID` LONG,
	`Well_Seq_Pos` LONG,
	`Sample_ID` LONG,
	`Well_Row` LONG,
	`Well_Column` LONG,
	`Solvent` LONGTEXT,
	`Volume` SINGLE,
	`any` LONGTEXT, constraint `Well_PK` primary key (`Container_ID`, `Well_Seq_Pos`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Well`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Well' :
-- 	`Container_ID`
-- 	`Well_Seq_Pos`
-- 	`Sample_ID`


-- Create new table `Location`.
-- `Location` : Table of Location
-- 	`ID` : ID identifies Location
-- 	`Position` : Position is of Location
-- 	`Shelf` : Shelf is of Location
-- 	`Cabinet` : Cabinet is of Location
-- 	`Room` : Room is of Location
-- 	`Building` : Building is of Location
-- 	`Site` : Site is of Location
-- 	`Country` : Country is of Location
-- 	`any` : any is of Location  
create table `Location` ( 
	`ID` LONG,
	`Position` LONGTEXT,
	`Shelf` LONGTEXT,
	`Cabinet` LONGTEXT,
	`Room` LONGTEXT,
	`Building` LONGTEXT,
	`Site` LONGTEXT,
	`Country` LONGTEXT,
	`any` LONGTEXT, constraint `Location_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Location`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Location' :
-- 	`ID`


-- Create new table `FFile`.
-- `FFile` : Table of FFile
-- 	`ID` : ID identifies FFile
-- 	`File_Name` : File_Name is of FFile
-- 	`File_Type_ID` : File_Type_ID is of FFile
-- 	`Server_UNC` : Server_UNC is of FFile
-- 	`File_Path` : File_Path is of FFile
-- 	`Created_Date` : Created_Date is of FFile
-- 	`Modified_Date` : Modified_Date is of FFile
-- 	`any` : any is of FFile  
create table `FFile` ( 
	`ID` LONG,
	`File_Name` LONGTEXT,
	`File_Type_ID` LONG,
	`Server_UNC` LONGTEXT,
	`File_Path` LONGTEXT,
	`Created_Date` DATETIME,
	`Modified_Date` DATETIME,
	`any` LONGTEXT, constraint `FFile_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`FFile`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'FFile' :
-- 	`ID`
-- 	`File_Name`
-- 	`File_Type_ID`


-- Create new table `Analysis_File`.
-- `Analysis_File` : Table of Analysis_File
-- 	`ID` : ID identifies Analysis_File
-- 	`FileID` : FileID identifies Analysis_File
-- 	`ExperimentID` : ExperimentID partly identifies Analysis_File
-- 	`any` : any is of Analysis_File  
create table `Analysis_File` ( 
	`ID` LONG,
	`FileID` LONG,
	`ExperimentID` LONG,
	`any` LONGTEXT, constraint `Analysis_File_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Analysis_File`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Analysis_File' :
-- 	`ID`
-- 	`FileID`
-- 	`ExperimentID`


-- Add foreign key constraints to table `Vector`.
alter table `Vector`
	add constraint `Page_Vector_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `Selection`.
alter table `Selection`
	add constraint `Vector_Selection_FK1` foreign key (
		`VectorID`)
	 references `Vector` (
		`ID`); 

alter table `Selection`
	add constraint `Page_Selection_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `SampleExperiment`.
alter table `SampleExperiment`
	add constraint `Experiment_SampleExperiment_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `SampleExperiment`
	add constraint `Sample_SampleExperiment_FK1` foreign key (
		`SampleID`)
	 references `Sample` (
		`ID`); 

-- Add foreign key constraints to table `Audit`.
alter table `Audit`
	add constraint `User_Audit_FK1` foreign key (
		`UserID`)
	 references `User` (
		`ID`); 

alter table `Audit`
	add constraint `Signature_Audit_FK1` foreign key (
		`SignableItemID`)
	 references `Signature` (
		`ID`); 

-- Add foreign key constraints to table `Sample`.
alter table `Sample`
	add constraint `SampleType_Sample_FK1` foreign key (
		`SampleTypeID`)
	 references `SampleType` (
		`ID`); 

alter table `Sample`
	add constraint `SampleRole_Sample_FK1` foreign key (
		`SampleRoleID`)
	 references `SampleRole` (
		`ID`); 

-- Add foreign key constraints to table `Parameter`.
alter table `Parameter`
	add constraint `ParameterCategory_Parameter_FK1` foreign key (
		`CategoryID`)
	 references `ParameterCategory` (
		`ID`); 

alter table `Parameter`
	add constraint `Sample_Parameter_FK1` foreign key (
		`SampleID`)
	 references `Sample` (
		`ID`); 

alter table `Parameter`
	add constraint `Page_Parameter_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

alter table `Parameter`
	add constraint `Experiment_Parameter_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `Parameter`
	add constraint `ValueType_Parameter_FK1` foreign key (
		`TypeID`)
	 references `ValueType` (
		`ID`); 

alter table `Parameter`
	add constraint `Devices_Parameter_FK1` foreign key (
		`DeviceID`)
	 references `Devices` (
		`ID`); 

alter table `Parameter`
	add constraint `Project_Parameter_FK1` foreign key (
		`ProjectID`)
	 references `Project` (
		`ID`); 

-- Add foreign key constraints to table `IndividualValue`.
alter table `IndividualValue`
	add constraint `Vector_IndividualValue_FK1` foreign key (
		`VectorID`)
	 references `Vector` (
		`ID`); 

-- Add foreign key constraints to table `AutoIncrementedValue`.
alter table `AutoIncrementedValue`
	add constraint `Vector_AutoIncrementedValue_FK1` foreign key (
		`VectorID`)
	 references `Vector` (
		`ID`); 

-- Add foreign key constraints to table `EncodedValue`.
alter table `EncodedValue`
	add constraint `Vector_EncodedValue_FK1` foreign key (
		`VectorID`)
	 references `Vector` (
		`ID`); 

-- Add foreign key constraints to table `Page`.
alter table `Page`
	add constraint `Experiment_Page_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `Page`
	add constraint `ValueSetType_Page_FK1` foreign key (
		`ValueSetTypeID`)
	 references `ValueSetType` (
		`ValueSetTypeID`); 

-- Add foreign key constraints to table `Experiment`.
alter table `Experiment`
	add constraint `User_Experiment_FK1` foreign key (
		`AuthorID`)
	 references `User` (
		`ID`); 

alter table `Experiment`
	add constraint `Technique_Experiment_FK1` foreign key (
		`TechniqueID`)
	 references `Technique` (
		`ID`); 

-- Add foreign key constraints to table `SampleContainer`.
alter table `SampleContainer`
	add constraint `Location_SampleContainer_FK1` foreign key (
		`LocationID`)
	 references `Location` (
		`ID`); 

-- Add foreign key constraints to table `Carrier`.
alter table `Carrier`
	add constraint `SampleContainer_Carrier_FK1` foreign key (
		`Container_ID`)
	 references `SampleContainer` (
		`ID`); 

-- Add foreign key constraints to table `Carrier_Well`.
alter table `Carrier_Well`
	add constraint `Vial_Carrier_Well_FK1` foreign key (
		`Container_ID`)
	 references `Vial` (
		`Container_ID`); 

alter table `Carrier_Well`
	add constraint `Carrier_Carrier_Well_FK1` foreign key (
		`Container_ID`)
	 references `Carrier` (
		`Container_ID`); 

-- Add foreign key constraints to table `Vial`.
alter table `Vial`
	add constraint `Container_Vial_FK1` foreign key (
		`Container_ID`)
	 references `SampleContainer` (
		`ID`); 

alter table `Vial`
	add constraint `Sample_Vial_FK1` foreign key (
		`Sample_ID`)
	 references `Sample` (
		`ID`); 

-- Add foreign key constraints to table `Plate`.
alter table `Plate`
	add constraint `SampleContainer_Plate_FK1` foreign key (
		`Container_ID`)
	 references `SampleContainer` (
		`ID`); 

-- Add foreign key constraints to table `Well`.
alter table `Well`
	add constraint `Plate_Well_FK1` foreign key (
		`Container_ID`)
	 references `Plate` (
		`Container_ID`); 

alter table `Well`
	add constraint `Sample_Well_FK1` foreign key (
		`Sample_ID`)
	 references `Sample` (
		`ID`); 

-- Add foreign key constraints to table `Analysis_File`.
alter table `Analysis_File`
	add constraint `FFile_Analysis_File_FK1` foreign key (
		`FileID`)
	 references `FFile` (
		`ID`); 

-- Note: Access does not support referential action clauses in SQL DDL.  Referential actions will be
-- created in the database for constraint 'FFile_Analysis_File_FK1' on table 'Analysis_File' using DAO
-- only if there is a connection to the Access database during DDL generation.
-- 	On parent table delete: CASCADE
alter table `Analysis_File`
	add constraint `Experiment_Analysis_File_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
