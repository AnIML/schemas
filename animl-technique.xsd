<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Burkhard Schaefer (BSSN Software) -->
<xsd:schema targetNamespace="urn:org:astm:animl:schema:technique:draft:1.2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:org:astm:animl:schema:technique:draft:1.2" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!--XML Schema for AnIML Technique Definition files. -->
	<xsd:element name="Technique" type="TechniqueType">
		<xsd:annotation>
			<xsd:documentation>Root Element of an AnIML Technique Definition.</xsd:documentation>
		</xsd:annotation>
		<xsd:unique name="topCategoryName">
			<xsd:selector xpath="CategoryBlueprint"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>
		<xsd:unique name="sampleName">
			<xsd:selector xpath="SampleRole"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>
		<xsd:unique name="resultName">
			<xsd:selector xpath="ResultBlueprint"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>
	</xsd:element>
	<xsd:complexType name="TechniqueType">
		<xsd:annotation>
			<xsd:documentation>Root Element of an AnIML Technique Definition.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="SampleRoleBlueprint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="MethodBlueprint" minOccurs="0"/>
			<xsd:element ref="ResultBlueprint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="version" type="xsd:string" use="required" fixed="1.2"/>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Human-readable name of this Technique Definition</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="extension" type="xsd:boolean" use="optional" default="false">
			<xsd:annotation>
				<xsd:documentation>Specifies if this document describes an extension. If false, this is a Technique Definition. If true, this is a Technique Extension.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:element name="SampleRoleBlueprint" type="SampleRoleBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of Parameters and role that the referenced Sample plays in the ExperimentStep.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SampleRoleBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of Parameters and role that the referenced Sample plays in the ExperimentStep.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="CategoryBlueprint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:token" use="required">
			<xsd:annotation>
				<xsd:documentation>Name of the SampleRole. Used in the "role" attribute of the Sample element in an AnIML document.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="samplePurpose" type="SamplePurposeType" use="required">
			<xsd:annotation>
				<xsd:documentation>Describes whether the sample playing this role is consumed or produced by this Technique.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="modality" type="ModalityType" use="optional" default="required">
			<xsd:annotation>
				<xsd:documentation>States if a sample with this role is required.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="maxOccurs" type="MaxOccursType" use="optional" default="1">
			<xsd:annotation>
				<xsd:documentation>Specifies how many samples with this role may exist. In an AnIML file, the Role name must then be suffixed with a number, starting with 1.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="inheritable" type="xsd:boolean" use="optional" default="true">
			<xsd:annotation>
				<xsd:documentation>Specifies whether this role is required if this ExperimentStep is nested under a Result. If true, the sample is inherited from the superordinate ExperimentStep.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:element name="MethodBlueprint" type="MethodBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Description of the experimental method used.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MethodBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Description of the experimental method used.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="CategoryBlueprint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ResultBlueprint" type="ResultBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of a Result generated by the ExperimentStep.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ResultBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of a Result generated by the ExperimentStep.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="SeriesSetBlueprint" minOccurs="0"/>
			<xsd:element ref="CategoryBlueprint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:token" use="required">
			<xsd:annotation>
				<xsd:documentation>Required name of the Result.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="modality" type="ModalityType" use="optional" default="required">
			<xsd:annotation>
				<xsd:documentation>Specifies if Result is optional or required.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="maxOccurs" type="MaxOccursType" use="optional" default="1">
			<xsd:annotation>
				<xsd:documentation>Maximum number of occurences of the Result. If set to > 1, the index attribute (1+) must be used in the AnIML document.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:element name="SeriesSetBlueprint" type="SeriesSetBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of SeriesSet that needs to be attached at this point.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SeriesSetBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of SeriesSet that needs to be attached at this point.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="SeriesBlueprint" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:token" use="required"/>
	</xsd:complexType>
	<xsd:element name="SeriesBlueprint" type="SeriesBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of Series that needs to be attached to this SeriesSet.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SeriesBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Definition of Series that needs to be attached to this SeriesSet.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="Unit" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="AllowedRange" minOccurs="0"/>
			<xsd:element ref="AllowedValue" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:token" use="required">
			<xsd:annotation>
				<xsd:documentation>Name this Series needs to have.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="seriesType" type="SeriesTypeType" use="required">
			<xsd:annotation>
				<xsd:documentation>Data type this Series needs to have.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="modality" type="ModalityType" use="optional" default="required">
			<xsd:annotation>
				<xsd:documentation>Defines whether this Series is optional or required.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="maxOccurs" type="MaxOccursType" use="optional" default="1">
			<xsd:annotation>
				<xsd:documentation>Maximum number of occurences of the Series. If > 1, the index attribute must be used in the AnIML document.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="scale" type="ScaleType" use="optional" default="linear"/>
		<xsd:attribute name="plotUse" type="PlotUseType" use="required"/>
		<xsd:attribute name="dependency" type="DependencyType" use="required"/>
	</xsd:complexType>
	<!-- -->
	<!--Elements for Parameters-->
	<xsd:element name="ParameterBlueprint" type="ParameterBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Name-value pair to be stored in current Category.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ParameterBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Name-value pair to be stored in current Category.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="Unit" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="AllowedRange" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="AllowedValue" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="parameterType" type="ParameterTypeType" use="required"/>
		<xsd:attribute name="modality" type="ModalityType" use="optional" default="required"/>
		<xsd:attribute name="maxOccurs" type="MaxOccursType" use="optional" default="1">
			<xsd:annotation>
				<xsd:documentation>Maximum number of occurences of the Series. If multiple occurrence is uses, an index (1+) must be appended to the Series' name in the AnIML document.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:element name="CategoryBlueprint" type="CategoryBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Collection of Parameters to be used on this hierarchy level.</xsd:documentation>
		</xsd:annotation>
		<xsd:unique name="parameterName">
			<xsd:selector xpath="ParameterBlueprint"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>
	</xsd:element>
	<xsd:complexType name="CategoryBlueprintType">
		<xsd:annotation>
			<xsd:documentation>Collection of Parameters to be used on this hierarchy level.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Documentation" minOccurs="0"/>
			<xsd:element ref="SeriesSetBlueprint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ParameterBlueprint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="CategoryBlueprint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:token" use="required"/>
		<xsd:attribute name="modality" type="ModalityType" use="optional" default="required"/>
		<xsd:attribute name="maxOccurs" type="MaxOccursType" use="optional" default="1"/>
	</xsd:complexType>
	<!-- -->
	<!--Type definitions for sample attributes-->
	<xsd:simpleType name="SamplePurposeType">
		<xsd:annotation>
			<xsd:documentation>Data type which indicates whether a sample is consumed or produced in an experiment.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="produced">
				<xsd:annotation>
					<xsd:documentation>Indicates that a sample is produced in an experiment.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="consumed">
				<xsd:annotation>
					<xsd:documentation>Indicates that a sample is consumed in an experiment.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<!---->
	<!--Type definitions for Series attributes-->
	<xsd:simpleType name="DependencyType">
		<xsd:annotation>
			<xsd:documentation>Specifies whether the Series is independent or dependent.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="independent">
				<xsd:annotation>
					<xsd:documentation>Specifies that the Series is independent.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="dependent">
				<xsd:annotation>
					<xsd:documentation>Specifies that the Series is dependent.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ScaleType">
		<xsd:annotation>
			<xsd:documentation>Specifies whether the data in this Series is typically plotted on a linear or logarithmic scale.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="linear">
				<xsd:annotation>
					<xsd:documentation>Specifies that data in this Series is typically plotted on a linear scale.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="log">
				<xsd:annotation>
					<xsd:documentation>Specifies that data in this Series is typically plotted on a common logarithmic scale.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="ln">
				<xsd:annotation>
					<xsd:documentation>Specifies that data in this Series is typically plotted on a natural logarithmic scale.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PlotUseType">
		<xsd:annotation>
			<xsd:documentation>Specifies whether a Series should be used for plotting or not. If set to "dimension", a new dimension will be created in the plot. If set to "attribute", no extra dimension is created.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="dimension">
				<xsd:annotation>
					<xsd:documentation>Specifies that a new dimension (axis) will be created in the plot for this Series.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="attribute">
				<xsd:annotation>
					<xsd:documentation>Specifies that no extra dimension (axis) will be created in the plot for this Series.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- -->
	<!--Type definitions for basic data types-->
	<xsd:simpleType name="AllTypeNameList">
		<xsd:annotation>
			<xsd:documentation>Names of all data types used in AnIML.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="Int">
				<xsd:annotation>
					<xsd:documentation>Represents an individual integer value (32 bits, signed, maxInclusive·2147483647 and ·minInclusive·-2147483648).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Long">
				<xsd:annotation>
					<xsd:documentation>Represents an individual Long Integer Value (64 bits, signed, ·maxInclusive·is 9223372036854775807 and ·minInclusive·is -9223372036854775808.).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Float">
				<xsd:annotation>
					<xsd:documentation>Represents an individual floating point value.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="String">
				<xsd:annotation>
					<xsd:documentation>Represents an individual string value.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Boolean">
				<xsd:annotation>
					<xsd:documentation>Represents an individual boolean value.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="DateTime">
				<xsd:annotation>
					<xsd:documentation>Represents an individual ISO Date/Time Value.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="EmbeddedXML">
				<xsd:annotation>
					<xsd:documentation>Represents a Value governed by a different XML Schema..</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="PNG">
				<xsd:annotation>
					<xsd:documentation>Base 64 encoded PNG  image</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="SVG">
				<xsd:annotation>
					<xsd:documentation>Value governed by the SVG  DTD. It is for representing images.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SeriesTypeType">
		<xsd:annotation>
			<xsd:documentation>Names of Data types usable for Series.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="AllTypeNameList"/>
	</xsd:simpleType>
	<xsd:simpleType name="ParameterTypeType">
		<xsd:annotation>
			<xsd:documentation>Names of Data types usable for Parameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="AllTypeNameList"/>
	</xsd:simpleType>
	<xsd:complexType name="ParameterValueType">
		<xsd:annotation>
			<xsd:documentation>Elements for allowed values in Parameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="Int"/>
			<xsd:element ref="Float32"/>
			<xsd:element ref="Float64"/>
			<xsd:element ref="String"/>
			<xsd:element ref="Boolean"/>
			<xsd:element ref="DateTime"/>
			<xsd:element ref="PNG"/>
			<xsd:element ref="EmbeddedXML"/>
			<xsd:element ref="SVG"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="NumericValueType">
		<xsd:annotation>
			<xsd:documentation>Elements for allowed numeric values in Parameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:restriction base="ParameterValueType">
				<xsd:choice>
					<xsd:element ref="Int">
						<xsd:annotation>
							<xsd:documentation>Individual Integer Value (32 bits, signed).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="Float32">
						<xsd:annotation>
							<xsd:documentation>Individual 32-bit Floating Point Value.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="Float64">
						<xsd:annotation>
							<xsd:documentation>Individual 64-bit Floating Point Value.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:restriction>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- -->
	<!--Miscellaneous-->
	<xsd:simpleType name="ModalityType">
		<xsd:annotation>
			<xsd:documentation>String with two allowed values: "required" and "optional".</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="required">
				<xsd:annotation>
					<xsd:documentation>Specifies that the use of the according data element is required.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="optional">
				<xsd:annotation>
					<xsd:documentation>Specifies that the use of the according data element is optional.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnboundedType">
		<xsd:annotation>
			<xsd:documentation>Represents the list value "unbounded".</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="unbounded"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MaxOccursType">
		<xsd:annotation>
			<xsd:documentation>Positive Integers and "unbounded" for multiplicity.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:positiveInteger UnboundedType"/>
	</xsd:simpleType>
	<xsd:element name="Documentation" type="DocumentationType">
		<xsd:annotation>
			<xsd:documentation>Description of the enclosing element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="DocumentationType">
		<xsd:annotation>
			<xsd:documentation>Description of the enclosing element.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string"/>
	</xsd:simpleType>
	<!---->
	<!--Units-->
	<xsd:element name="Unit" type="UnitType">
		<xsd:annotation>
			<xsd:documentation>Definition of a Scientific Unit.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="UnitType">
		<xsd:annotation>
			<xsd:documentation>Definition of a Scientific Unit.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="SIUnit" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="label" type="LabelType" use="required">
			<xsd:annotation>
				<xsd:documentation>Defines the visual representation of a particular Unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="quantity" type="QuantityType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Quantity the unit can be applied to</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="LabelType">
		<xsd:annotation>
			<xsd:documentation>String representation of a particular Unit.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:minLength value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="QuantityType">
		<xsd:annotation>
			<xsd:documentation>Quantity a Unit is applicable to.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:minLength value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="SIUnit" type="SIUnitType">
		<xsd:annotation>
			<xsd:documentation>Combination of SI Units used to represent Scientific Unit.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SIUnitType">
		<xsd:annotation>
			<xsd:documentation>Combination of SI Units used to represent Scientific unit</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="SIUnitNameList">
				<xsd:attribute name="factor" type="xsd:float" use="optional" default="1"/>
				<xsd:attribute name="exponent" type="xsd:float" use="optional" default="1"/>
				<xsd:attribute name="offset" type="xsd:float" use="optional" default="0"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:simpleType name="SIUnitNameList">
		<xsd:annotation>
			<xsd:documentation>Names of all SI Units</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="1">
				<xsd:annotation>
					<xsd:documentation>Represents a dimensionless unit.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="m">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "meter".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="kg">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "kilogram".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="s">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "second".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="A">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "ampere".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="K">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "kelvin".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mol">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "mol".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="cd">
				<xsd:annotation>
					<xsd:documentation>Represents the SI unit "candela".</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<!---->
	<!--Lists of permitted values and ranges-->
	<xsd:element name="AllowedValue" type="AllowedValueType">
		<xsd:annotation>
			<xsd:documentation>Permitted Values for Parameter. If not specified, the full range of the data type is allowed.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AllowedValueType">
		<xsd:annotation>
			<xsd:documentation>Permitted Values for Parameter. If not specified, the full range of the data type is allowed.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ParameterValueType">
				<xsd:attribute name="unit" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>Label of Unit that applies to this allowed value
</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="AllowedRange" type="AllowedRangeType">
		<xsd:annotation>
			<xsd:documentation>Range of Permitted Values for Parameters.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AllowedRangeType">
		<xsd:annotation>
			<xsd:documentation>Range of Permitted Values for Parameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="Min"/>
			<xsd:element ref="Max"/>
		</xsd:sequence>
		<xsd:attribute name="unit" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Label of Unit that applies to this allowed range of values
</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<!---->
	<!--Atomic data types-->
	<xsd:element name="Int" type="IntType">
		<xsd:annotation>
			<xsd:documentation>Individual Integer Value (32 bits, signed).</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="IntType">
		<xsd:annotation>
			<xsd:documentation>Individual Integer Value (32 bits, signed).</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:int"/>
	</xsd:simpleType>
	<xsd:element name="Long" type="LongType">
		<xsd:annotation>
			<xsd:documentation>Individual Long Integer Value (64 bits, signed).</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="LongType">
		<xsd:annotation>
			<xsd:documentation>Individual Long Integer Value (64 bits, signed).</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:long"/>
	</xsd:simpleType>
	<xsd:element name="Float32" type="Float32Type">
		<xsd:annotation>
			<xsd:documentation>Individual 32-bit Floating Point Value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="Float32Type">
		<xsd:annotation>
			<xsd:documentation>Individual 32-bit Floating Point Value.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:float"/>
	</xsd:simpleType>
	<xsd:element name="Float64" type="Float64Type">
		<xsd:annotation>
			<xsd:documentation>Individual 64-bit Floating Point Value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="Float64Type">
		<xsd:annotation>
			<xsd:documentation>Individual 64-bit Floating Point Value.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:double"/>
	</xsd:simpleType>
	<xsd:element name="String" type="StringType">
		<xsd:annotation>
			<xsd:documentation>Individual String Value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="StringType">
		<xsd:annotation>
			<xsd:documentation>Individual String Value.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string"/>
	</xsd:simpleType>
	<xsd:element name="Boolean" type="BooleanType">
		<xsd:annotation>
			<xsd:documentation>Individual Boolean Value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="BooleanType">
		<xsd:annotation>
			<xsd:documentation>Individual Boolean Value.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:boolean"/>
	</xsd:simpleType>
	<xsd:element name="DateTime" type="DateTimeType">
		<xsd:annotation>
			<xsd:documentation>Individual ISO Date/Time Value</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="DateTimeType">
		<xsd:annotation>
			<xsd:documentation>Individual ISO Date/Time Value</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:dateTime"/>
	</xsd:simpleType>
	<xsd:element name="PNG" type="PNGType">
		<xsd:annotation>
			<xsd:documentation>Base 64 encoded PNG image</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="PNGType">
		<xsd:annotation>
			<xsd:documentation>Base 64 encoded PNG image</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:base64Binary"/>
	</xsd:simpleType>
	<xsd:element name="EmbeddedXML" type="EmbeddedXMLType">
		<xsd:annotation>
			<xsd:documentation>Value governed by a different XML Schema.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="EmbeddedXMLType">
		<xsd:annotation>
			<xsd:documentation>Value governed by a different XML Schema.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string"/>
	</xsd:simpleType>
	<xsd:element name="SVG" type="SVGType">
		<xsd:annotation>
			<xsd:documentation>Vector graphic data governed by the SVG DTD.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="SVGType">
		<xsd:annotation>
			<xsd:documentation>Vector graphic data governed by the SVG DTD.</xsd:documentation>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string"/>
	</xsd:simpleType>
	<!---->
	<!--Ranges-->
	<xsd:element name="Min" type="MinType">
		<xsd:annotation>
			<xsd:documentation>Lower Boundary of Range.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MinType">
		<xsd:annotation>
			<xsd:documentation>Lower Boundary of Range.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="NumericValueType">
				<xsd:attribute name="included" type="xsd:boolean" use="optional" default="true">
					<xsd:annotation>
						<xsd:documentation>Specifies whether the given value is part of the interval.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="Max" type="MaxType">
		<xsd:annotation>
			<xsd:documentation>Upper Boundary of Range.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MaxType">
		<xsd:annotation>
			<xsd:documentation>Upper Boundary of Range.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="NumericValueType">
				<xsd:attribute name="included" type="xsd:boolean" use="optional" default="true">
					<xsd:annotation>
						<xsd:documentation>Specifies whether the given value is part of the interval.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
