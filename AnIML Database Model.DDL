--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : G:\AnIML\AnIML Zoo\schema\AnIML Database Model.vsd.
--    Time Created: December 10, 2004 1:33 AM.
--    Operation   : From Visio Generate Wizard.
--    Connected data source : No connection.
--    Connected server      : No connection.
--    Connected database    : Not applicable.



-- Create  database.
--    Access database file name : 


-- Create new table `ValueType`.
-- `ValueType` : Table of ValueType
-- 	`ID` : ID identifies ValueType
-- 	`Name` : Name is of ValueType  
create table `ValueType` ( 
	`ID` LONG,
	`Name` LONGTEXT, constraint `ValueType_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ValueType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ValueType' :
-- 	`ID`
-- 	`Name`


-- Create new table `Selection`.
-- `Selection` : Table of Selection
-- 	`ID` : ID identifies Selection
-- 	`PageID` : PageID is of Selection
-- 	`SelectionType` : SelectionType is of Selection
-- 	`Start` : Start is of Selection
-- 	`Stop` : Stop is of Selection
-- 	`PointIndex` : PointIndex is of Selection
-- 	`ParentPageID` : ParentPageID is of Selection  
create table `Selection` ( 
	`ID` LONG,
	`PageID` LONG,
	`SelectionType` LONGTEXT,
	`Start` SHORT,
	`Stop` SHORT,
	`PointIndex` SHORT,
	`ParentPageID` LONG, constraint `Selection_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Selection`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Selection' :
-- 	`ID`


-- Create new table `Technique`.
-- `Technique` : Table of Technique
-- 	`ID` : ID identifies Technique
-- 	`TechniqueName` : TechniqueName is of Technique
-- 	`URI` : URI is of Technique  
create table `Technique` ( 
	`ID` LONG,
	`TechniqueName` LONGTEXT,
	`URI` LONGTEXT, constraint `Technique_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Technique`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Technique' :
-- 	`ID`
-- 	`TechniqueName`
-- 	`URI`


-- Create new table `SampleRole`.
-- `SampleRole` : Table of SampleRole
-- 	`ID` : ID identifies SampleRole
-- 	`RoleName` : RoleName partly identifies SampleRole  
create table `SampleRole` ( 
	`ID` LONG,
	`RoleName` LONGTEXT, constraint `SampleRole_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleRole`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleRole' :
-- 	`ID`
-- 	`RoleName`


-- Create new table `SampleExperiment`.
-- `SampleExperiment` : Table of SampleExperiment
-- 	`SampleExperimentID` : SampleExperimentID identifies SampleExperiment
-- 	`SampleID` : SampleID is of SampleExperiment
-- 	`ExperimentID` : ExperimentID is of SampleExperiment  
create table `SampleExperiment` ( 
	`SampleExperimentID` LONG,
	`SampleID` LONG,
	`ExperimentID` LONG, constraint `SampleExperiment_PK` primary key (`SampleExperimentID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleExperiment`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleExperiment' :
-- 	`SampleExperimentID`


-- Create new table `Signature`.
-- `Signature` : Table of Signature
-- 	`ID` : ID identifies Signature
-- 	`SignedInfo` : SignedInfo is of Signature
-- 	`ValueID` : ValueID is of Signature
-- 	`KeyInfo` : KeyInfo is of Signature
-- 	`Object` : Object is of Signature  
create table `Signature` ( 
	`ID` LONG,
	`SignedInfo` LONGTEXT,
	`ValueID` LONG,
	`KeyInfo` SHORT,
	`Object` SHORT, constraint `Signature_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Signature`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Signature' :
-- 	`ID`


-- Create new table `User`.
-- `User` : Table of User
-- 	`ID` : ID identifies User
-- 	`Name` : Name is of User
-- 	`Email` : Email is of User
-- 	`Phone` : Phone is of User
-- 	`Location` : Location is of User  
create table `User` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`Email` LONGTEXT,
	`Phone` LONGTEXT,
	`Location` LONGTEXT, constraint `User_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`User`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'User' :
-- 	`ID`
-- 	`Name`


-- Create new table `Audit`.
-- `Audit` : Table of Audit
-- 	`ID` : ID identifies Audit
-- 	`Timestamp` : Timestamp is of Audit
-- 	`UserID` : UserID is of Audit
-- 	`Action` : Action is of Audit
-- 	`Reason` : Reason is of Audit
-- 	`Description` : Description is of Audit
-- 	`SignableItemID` : SignableItemID is of Audit  
create table `Audit` ( 
	`ID` LONG,
	`Timestamp` DATETIME,
	`UserID` LONG,
	`Action` SHORT,
	`Reason` SHORT,
	`Description` SHORT,
	`SignableItemID` LONG, constraint `Audit_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Audit`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Audit' :
-- 	`ID`
-- 	`Timestamp`


-- Create new table `SampleType`.
-- `SampleType` : Table of SampleType
-- 	`ID` : ID identifies SampleType
-- 	`Name` : Name is of SampleType  
create table `SampleType` ( 
	`ID` LONG,
	`Name` LONGTEXT, constraint `SampleType_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`SampleType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'SampleType' :
-- 	`ID`
-- 	`Name`


-- Create new table `Sample`.
-- `Sample` : Table of Sample
-- 	`ID` : ID identifies Sample
-- 	`ExternalSampleID` : ExternalSampleID is of Sample
-- 	`SampleName` : SampleName is of Sample
-- 	`SampleTypeID` : SampleTypeID is of Sample
-- 	`SignableItemID` : SignableItemID is of Sample
-- 	`Barcode` : Barcode is of Sample
-- 	`IsDerived` : IsDerived is of Sample
-- 	`RoleID` : RoleID is of Sample
-- 	`Purpose` : Purpose is of Sample  
create table `Sample` ( 
	`ID` LONG,
	`ExternalSampleID` LONGTEXT,
	`SampleName` LONGTEXT,
	`SampleTypeID` LONG,
	`SignableItemID` LONG,
	`Barcode` LONGTEXT,
	`IsDerived` SHORT,
	`RoleID` LONG,
	`Purpose` SHORT, constraint `Sample_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Sample`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Sample' :
-- 	`ID`
-- 	`SampleTypeID`


-- Create new table `ParameterCategory`.
-- `ParameterCategory` : Table of ParameterCategory
-- 	`ID` : ID identifies ParameterCategory
-- 	`Name` : Name is of ParameterCategory
-- 	`SignableItemID` : SignableItemID is of ParameterCategory
-- 	`Type` : Type is of ParameterCategory  
create table `ParameterCategory` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`SignableItemID` LONG,
	`Type` SHORT, constraint `ParameterCategory_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ParameterCategory`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ParameterCategory' :
-- 	`ID`


-- Create new table `Parameter`.
-- `Parameter` : Table of Parameter
-- 	`ID` : ID identifies Parameter
-- 	`Name` : Name is of Parameter
-- 	`Value` : Value is of Parameter
-- 	`CategoryID` : CategoryID is of Parameter
-- 	`TypeID` : TypeID is of Parameter
-- 	`SignableItemID` : SignableItemID is of Parameter
-- 	`ExperimentID` : ExperimentID is of Parameter
-- 	`PageID` : PageID is of Parameter
-- 	`SampleID` : SampleID is of Parameter  
create table `Parameter` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`Value` LONGTEXT,
	`CategoryID` LONG,
	`TypeID` LONG,
	`SignableItemID` LONG,
	`ExperimentID` LONG,
	`PageID` LONG,
	`SampleID` LONG, constraint `Parameter_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Parameter`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Parameter' :
-- 	`ID`


-- Create new table `IndividualValue`.
-- `IndividualValue` : Table of IndividualValue
-- 	`ID` : ID identifies IndividualValue
-- 	`PageID` : PageID is of IndividualValue
-- 	`Value` : Value is of IndividualValue  
create table `IndividualValue` ( 
	`ID` LONG,
	`PageID` LONG,
	`Value` LONGTEXT, constraint `IndividualValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`IndividualValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'IndividualValue' :
-- 	`ID`


-- Create new table `AutoIncrementedValue`.
-- `AutoIncrementedValue` : Table of AutoIncrementedValue
-- 	`ID` : ID identifies AutoIncrementedValue
-- 	`PageID` : PageID is of AutoIncrementedValue
-- 	`Increment` : Increment is of AutoIncrementedValue
-- 	`StartValue` : StartValue is of AutoIncrementedValue  
create table `AutoIncrementedValue` ( 
	`ID` LONG,
	`PageID` LONG,
	`Increment` DOUBLE,
	`StartValue` DOUBLE, constraint `AutoIncrementedValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`AutoIncrementedValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'AutoIncrementedValue' :
-- 	`ID`
-- 	`PageID`
-- 	`Increment`
-- 	`StartValue`


-- Create new table `EncodedValue`.
-- `EncodedValue` : Table of EncodedValue
-- 	`ID` : ID identifies EncodedValue
-- 	`PageID` : PageID is of EncodedValue
-- 	`Value` : Value is of EncodedValue  
create table `EncodedValue` ( 
	`ID` LONG,
	`PageID` LONG,
	`Value` LONGTEXT, constraint `EncodedValue_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`EncodedValue`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'EncodedValue' :
-- 	`ID`
-- 	`PageID`
-- 	`Value`


-- Create new table `ValueSetType`.
-- `ValueSetType` : Table of ValueSetType
-- 	`ValueSetTypeID` : ValueSetTypeID identifies ValueSetType
-- 	`ValueSetTypeName` : ValueSetTypeName is of ValueSetType  
create table `ValueSetType` ( 
	`ValueSetTypeID` LONG,
	`ValueSetTypeName` LONGTEXT, constraint `ValueSetType_PK` primary key (`ValueSetTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`ValueSetType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'ValueSetType' :
-- 	`ValueSetTypeID`


-- Create new table `Page`.
-- `Page` : Table of Page
-- 	`ID` : ID identifies Page
-- 	`ValueSetTypeID` : ValueSetTypeID is of Page
-- 	`ExperimentID` : ExperimentID is of Page  
create table `Page` ( 
	`ID` LONG,
	`ValueSetTypeID` LONG,
	`ExperimentID` LONG, constraint `Page_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Page`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Page' :
-- 	`ID`


-- Create new table `Experiment`.
-- `Experiment` : Table of Experiment
-- 	`ID` : ID identifies Experiment
-- 	`Name` : Name is of Experiment
-- 	`TechniqueID` : TechniqueID is of Experiment
-- 	`AuthorID` : AuthorID is of Experiment
-- 	`IsTemplate` : IsTemplate is of Experiment
-- 	`Timestamp` : Timestamp is of Experiment
-- 	`SampleID` : SampleID is of Experiment
-- 	`SignableItemID` : SignableItemID is of Experiment  
create table `Experiment` ( 
	`ID` LONG,
	`Name` LONGTEXT,
	`TechniqueID` LONG,
	`AuthorID` LONG,
	`IsTemplate` SHORT,
	`Timestamp` DATETIME,
	`SampleID` LONG,
	`SignableItemID` LONG, constraint `Experiment_PK` primary key (`ID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`Experiment`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'Experiment' :
-- 	`ID`


-- Add foreign key constraints to table `Selection`.
alter table `Selection`
	add constraint `Page_Selection_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `SampleExperiment`.
alter table `SampleExperiment`
	add constraint `Experiment_SampleExperiment_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `SampleExperiment`
	add constraint `Sample_SampleExperiment_FK1` foreign key (
		`SampleID`)
	 references `Sample` (
		`ID`); 

-- Add foreign key constraints to table `Audit`.
alter table `Audit`
	add constraint `User_Audit_FK1` foreign key (
		`UserID`)
	 references `User` (
		`ID`); 

alter table `Audit`
	add constraint `Signature_Audit_FK1` foreign key (
		`SignableItemID`)
	 references `Signature` (
		`ID`); 

-- Add foreign key constraints to table `Sample`.
alter table `Sample`
	add constraint `SampleType_Sample_FK1` foreign key (
		`SampleTypeID`)
	 references `SampleType` (
		`ID`); 

alter table `Sample`
	add constraint `SampleRole_Sample_FK1` foreign key (
		`RoleID`)
	 references `SampleRole` (
		`ID`); 

-- Add foreign key constraints to table `Parameter`.
alter table `Parameter`
	add constraint `ParameterCategory_Parameter_FK1` foreign key (
		`CategoryID`)
	 references `ParameterCategory` (
		`ID`); 

alter table `Parameter`
	add constraint `Sample_Parameter_FK1` foreign key (
		`SampleID`)
	 references `Sample` (
		`ID`); 

alter table `Parameter`
	add constraint `Page_Parameter_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

alter table `Parameter`
	add constraint `Experiment_Parameter_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `Parameter`
	add constraint `ValueType_Parameter_FK1` foreign key (
		`TypeID`)
	 references `ValueType` (
		`ID`); 

-- Add foreign key constraints to table `IndividualValue`.
alter table `IndividualValue`
	add constraint `Page_IndividualValue_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `AutoIncrementedValue`.
alter table `AutoIncrementedValue`
	add constraint `Page_AutoIncrementedValue_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `EncodedValue`.
alter table `EncodedValue`
	add constraint `Page_EncodedValue_FK1` foreign key (
		`PageID`)
	 references `Page` (
		`ID`); 

-- Add foreign key constraints to table `Page`.
alter table `Page`
	add constraint `Experiment_Page_FK1` foreign key (
		`ExperimentID`)
	 references `Experiment` (
		`ID`); 

alter table `Page`
	add constraint `ValueSetType_Page_FK1` foreign key (
		`ValueSetTypeID`)
	 references `ValueSetType` (
		`ValueSetTypeID`); 

alter table `Page`
	add constraint `Selection_Page_FK1` foreign key (
		`ID`)
	 references `Selection` (
		`ID`); 

-- Add foreign key constraints to table `Experiment`.
alter table `Experiment`
	add constraint `User_Experiment_FK1` foreign key (
		`AuthorID`)
	 references `User` (
		`ID`); 

alter table `Experiment`
	add constraint `Technique_Experiment_FK1` foreign key (
		`TechniqueID`)
	 references `Technique` (
		`ID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
